import{y as B,J as A,L as F,K as H,X as O,N as m,d as f,w as p,O as v,P as e,R as k,r as c,C as g,U as D,o as I,G as M,f as R,Q as q,e as x,aK as T,$ as E,a0 as V,x as S,a2 as K,a3 as L,a4 as $,n as U}from"./sZdZc_VC.js";import{a as j}from"./BiHKuASC.js";const[N,z]=A("CollapsibleRoot"),G=B({__name:"CollapsibleRoot",props:{defaultOpen:{type:Boolean,default:!1},open:{type:Boolean,default:void 0},disabled:{type:Boolean},unmountOnHide:{type:Boolean,default:!0},asChild:{type:Boolean},as:{}},emits:["update:open"],setup(i,{expose:d,emit:a}){const s=i,n=F(s,"open",a,{defaultValue:s.defaultOpen,passive:s.open===void 0}),{disabled:u,unmountOnHide:r}=H(s);return z({contentId:"",disabled:u,open:n,unmountOnHide:r,onOpenToggle:()=>{u.value||(n.value=!n.value)}}),d({open:n}),O(),(l,h)=>(f(),m(e(k),{as:l.as,"as-child":s.asChild,"data-state":e(n)?"open":"closed","data-disabled":e(u)?"":void 0},{default:p(()=>[v(l.$slots,"default",{open:e(n)})]),_:3},8,["as","as-child","data-state","data-disabled"]))}}),J=B({inheritAttrs:!1,__name:"CollapsibleContent",props:{forceMount:{type:Boolean},asChild:{type:Boolean},as:{}},emits:["contentFound"],setup(i,{emit:d}){const a=i,s=d,t=N();t.contentId||=j(void 0,"reka-collapsible-content");const n=c(),{forwardRef:u,currentElement:r}=O(),l=c(0),h=c(0),b=g(()=>t.open.value),C=c(b.value),y=c();D(()=>[b.value,n.value?.present],async()=>{await E();const o=r.value;if(!o)return;y.value=y.value||{transitionDuration:o.style.transitionDuration,animationName:o.style.animationName},o.style.transitionDuration="0s",o.style.animationName="none";const _=o.getBoundingClientRect();h.value=_.height,l.value=_.width,C.value||(o.style.transitionDuration=y.value.transitionDuration,o.style.animationName=y.value.animationName)},{immediate:!0});const P=g(()=>C.value&&t.open.value);return I(()=>{requestAnimationFrame(()=>{C.value=!1})}),M(r,"beforematch",o=>{requestAnimationFrame(()=>{t.onOpenToggle(),s("contentFound")})}),(o,_)=>(f(),m(e(T),{ref_key:"presentRef",ref:n,present:o.forceMount||e(t).open.value,"force-mount":!0},{default:p(({present:w})=>[R(e(k),q(o.$attrs,{id:e(t).contentId,ref:e(u),"as-child":a.asChild,as:o.as,hidden:w?void 0:e(t).unmountOnHide.value?"":"until-found","data-state":P.value?void 0:e(t).open.value?"open":"closed","data-disabled":e(t).disabled?.value?"":void 0,style:{"--reka-collapsible-content-height":`${h.value}px`,"--reka-collapsible-content-width":`${l.value}px`}}),{default:p(()=>[!e(t).unmountOnHide.value||w?v(o.$slots,"default",{key:0}):x("",!0)]),_:2},1040,["id","as-child","as","hidden","data-state","data-disabled","style"])]),_:3},8,["present"]))}}),Q=B({__name:"CollapsibleTrigger",props:{asChild:{type:Boolean},as:{default:"button"}},setup(i){const d=i;O();const a=N();return(s,t)=>(f(),m(e(k),{type:s.as==="button"?"button":void 0,as:s.as,"as-child":d.asChild,"aria-controls":e(a).contentId,"aria-expanded":e(a).open.value,"data-state":e(a).open.value?"open":"closed","data-disabled":e(a).disabled?.value?"":void 0,disabled:e(a).disabled?.value,onClick:e(a).onOpenToggle},{default:p(()=>[v(s.$slots,"default")]),_:3},8,["type","as","as-child","aria-controls","aria-expanded","data-state","data-disabled","disabled","onClick"]))}}),X={slots:{root:"",content:"data-[state=open]:animate-[collapsible-down_200ms_ease-out] data-[state=closed]:animate-[collapsible-up_200ms_ease-out] overflow-hidden"}},Z={__name:"UCollapsible",props:{as:{type:null,required:!1},class:{type:null,required:!1},ui:{type:null,required:!1},defaultOpen:{type:Boolean,required:!1},open:{type:Boolean,required:!1},disabled:{type:Boolean,required:!1},unmountOnHide:{type:Boolean,required:!1,default:!0}},emits:["update:open"],setup(i,{emit:d}){const a=i,s=d,t=V(),n=S(),u=K(L(a,"as","defaultOpen","open","disabled","unmountOnHide"),s),r=g(()=>$({extend:$(X),...n.ui?.collapsible||{}})());return(l,h)=>(f(),m(e(G),q(e(u),{class:r.value.root({class:[a.ui?.root,a.class]})}),{default:p(({open:b})=>[t.default?(f(),m(e(Q),{key:0,"as-child":""},{default:p(()=>[v(l.$slots,"default",{open:b})]),_:2},1024)):x("",!0),R(e(J),{class:U(r.value.content({class:a.ui?.content}))},{default:p(()=>[v(l.$slots,"content")]),_:3},8,["class"])]),_:3},16,["class"]))}};export{Z as _,G as a,J as b,Q as c};
